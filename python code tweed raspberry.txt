from flask import Flask, render_template
import os
import glob
import time
import json
from threading import Thread

#these tow lines mount the device:
os.system('modprobe w1-gpio')
os.system('modprobe w1-therm')
 
class DS18B20:
    def __init__(self):
        self.base_dir = r'/sys/bus/w1/devices/28*'
        self.sensor_path = []        
        self.sensor_name = []
        self.temps = []
        self.log = []
        self.last_values = []

    def find_sensors(self):
        self.sensor_path = glob.glob(self.base_dir)
        self.sensor_name = [path.split('/')[-1] for path in self.sensor_path]

    def strip_string(self, temp_str):
        i = temp_str.index('t=')
        if i != -1:
            temp_c = float(temp_str[i+2:])/1000.0
        return temp_c

    def read_temp(self):
        for sensor, path in zip(self.sensor_name, self.sensor_path):
            # open sensor file and read data
            with open(path + '/w1_slave','r') as f:
                valid, temp = f.readlines()
            # check validity of data
            if 'YES' in valid:
                self.log.append(self.strip_string(temp))
                time.sleep(10)
            else:
                time.sleep(0.2)
                
    def start_reading(self):
        def _start():
            while 1:
                self.read_temp()
                self.last_values = [s.log[0], s.log[1]]
                self.log.clear()
                time.sleep(1)
        thread = Thread(target=_start)
        thread.start()

s = DS18B20()
s.find_sensors()
s.start_reading()

app = Flask(__name__)
@app.route("/")
def hello():
    s.read_temp()
    templateData = {
        'temp1': "%.2f"% s.log[0],
        'temp2': "%.2f"% s.log[1]
        }
    s.log.clear()
    return render_template('index.html', **templateData)

@app.route("/api/temp")
def temp1():
    return json.dumps(s.last_values)

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=80, debug=True)